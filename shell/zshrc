setopt AUTO_CD
setopt CHASE_LINKS
setopt BASH_AUTO_LIST
setopt APPEND_HISTORY
setopt HIST_NO_STORE
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_ALL_DUPS
setopt PROMPT_SUBST

unset TRIMMED_PWD
export TRIMMED_PWD=

export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWDIRTYSTATE=1
#[[ -e ~/.bashrc ]] && emulate sh -c 'source ~/.bashrc'
if [ -d ~/.shrc.d/ ]; then
    for f in `ls ~/.shrc.d/`; do
        if [ -f ~/.shrc.d/$f ]; then
            source ~/.shrc.d/$f
        fi
    done
fi

precmd() { update_terminal_cwd ; trim_directory_length ; __git_ps1 "%F{green}%n@%m%f:%F{blue}\${TRIMMED_PWD}%F{yellow}" "%f$ " }

bindkey -e

export PATH=/opt/homebrew/bin:/usr/local/bin:/usr/bin:~/bin:/usr/local/sbin:/usr/local/clamav/bin:/usr/local/clamav/sbin:$PATH
export PKG_CONFIG_PATH="/opt/X11/lib/pkgconfig"
export XML_CATALOG_FILES="/usr/local/etc/xml/catalog"
export EDITOR=vi
export GOPATH=~/scripts/go
if [ ! -d $GOPATH ]; then
    mkdir -p $GOPATH/bin
fi
export PATH="$PATH:$GOPATH/bin"
export HOMEBREW_GITHUB_API_TOKEN=94026d274028e7d83dab59a6c9a621a6f596db49
if [ -f ~/.update_brew.sh ]; then
  ~/.update_brew.sh
fi

TODAY=`date +%Y%m%d`
if [ -f ~/.brew_env_$TODAY ]; then
    echo "Loading today's brew..."
    . ~/.brew_env_$TODAY
else
    rm -f ~/.brew_env*
    echo -n "brewing good stuff for $TODAY: "
    for BRW in python qt go icu4c openssl readline sqlite libressl libxml2 zlib openjdk; do
        echo -n "$BRW "
        export BREWPATH=$(brew --prefix $BRW 2>/dev/null)
        brew_path $BREWPATH
        unset BREWPATH
    done
    echo ""
    echo "export PATH=\"$PATH\"" >>~/.brew_env_$TODAY
    echo "export LD_FLAGS=\"$LD_FLAGS\"" >>~/.brew_env_$TODAY
    echo "export PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH\"" >>~/.brew_env_$TODAY
    echo "export CPP_FLAGS=\"$CPP_FLAGS\"" >>~/.brew_env_$TODAY
fi

PERL_MB_OPT="--install_base \"/Users/mbroekman/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/mbroekman/perl5"; export PERL_MM_OPT;

if [ -f ~/.fortune.sh ]; then
  ~/.fortune.sh
fi

export PAGER="less -X"

if [ ! -f ~/.real_ip_checked ]; then
  check_real_ip
  date +%s > ~/.real_ip_checked
else
  last_chk=`cat ~/.real_ip_checked`
  now_chk=`date +%s`
  if [ $(( $now_chk - $last_chk )) -gt 86400 ]; then
    rm ~/.real_ip_checked
    check_real_ip
    date +%s > ~/.real_ip_checked
  fi
fi

if [ -f ~/.real_ip ]; then
  . ~/.real_ip
fi

IPATH=$PATH
PATH=$(n= ;IFS=':'; for e in $IPATH; do [[ :$n == *:$e:* ]] || n+=$e:; done; echo "${n%:}")
unset IFS
export PATH

if [ -x /usr/bin/osascript ]; then
    LDC=0
    if [ -f ~/.last_desktop_change ]; then
        LDC=`cat ~/.last_desktop_change`
    fi
    NOW=`date +%Y%m%d%H`
    if [ $(( $LDC + 2 )) -lt $NOW ]; then
        osascript -e 'tell application "System Events" to tell current desktop to set change interval to -1'
        osascript -e 'tell application "System Events" to tell current desktop to set change interval to 1209600'
        echo $NOW >~/.last_desktop_change
    fi
fi

